from django.core.files.base import ContentFile
from django.core.files import File
from PIL import Image
from io import BytesIO

def compress_img(image, desired_width=None, desired_height=None):
    """
    Универсальная функция для сжатия и обрезки изображения.

    :param image: Загружаемое изображение (File)
    :param desired_width: Желаемая ширина изображения (int)
    :param desired_height: Желаемая высота изображения (int)
    :return: Обработанное изображение в формате File
    """
    try:
        # Открываем изображение и получаем его размеры
        im = Image.open(image)
        width, height = im.size

        # Проверяем, заданы ли желаемые размеры
        if desired_width is not None and desired_height is not None:
            # Масштабируем изображение с сохранением пропорций
            aspect_ratio = width / height
            desired_aspect_ratio = desired_width / desired_height

            if aspect_ratio > desired_aspect_ratio:
                # Изображение шире: подгоняем по ширине
                new_width = min(width, desired_width)
                new_height = int(new_width / aspect_ratio)
            else:
                # Изображение выше: подгоняем по высоте
                new_height = min(height, desired_height)
                new_width = int(new_height * aspect_ratio)

            # Масштабируем изображение
            im = im.resize((new_width, new_height), Image.LANCZOS)

            # Обрезаем, если размеры до этого были пропорционально изменены
            if new_width != desired_width or new_height != desired_height:
                im = im.crop((0, 0, desired_width, desired_height))

        # Сохраняем изображение в формате WEBP
        im_bytes = BytesIO()
        im.save(im_bytes, format="WEBP", quality=85)

        # Создаем ContentFile и File для сохранения в модели Django
        image_content_file = ContentFile(im_bytes.getvalue())
        name = image.name.split('.')[0] + f'_{desired_width or width}x{desired_height or height}.webp'
        new_image = File(image_content_file, name=name)
        return new_image

    except Exception as e:
        print(f"Ошибка при обработке изображения: {e}")
        return None
