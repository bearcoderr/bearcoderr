version: '3.8'

services:
  web:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile
    container_name: bearcoder-web  # Имя для контейнера web
    env_file:
      - .env
    environment:
      LANGUAGE_CODE: ${LANGUAGE_CODE}
      TIME_ZONE: ${TIME_ZONE}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DB_ENGINE: ${DB_ENGINE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      EMAIL_BACKEND: ${EMAIL_BACKEND}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
    depends_on:
      - db
      - redis
    ports:
      - 8001:8000


  db:
    image: postgres:16-alpine
    container_name: bearcoder-db  # Имя для контейнера PostgreSQL
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - "C:/Users/aleks/OneDrive/Рабочий стол/Django/bearcoderr/bearcoderr/backup.sql:/app/backup.sql"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: bearcoder-redis  # Имя для контейнера Redis
    ports:
      - 6379:6379

  celery:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile
    container_name: bearcoder-celery  # Имя для контейнера Celery
    command: poetry run celery -A src.config.celery worker --loglevel=info
    env_file:
      - .env
    environment:
      LANGUAGE_CODE: ${LANGUAGE_CODE}
      TIME_ZONE: ${TIME_ZONE}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DB_ENGINE: ${DB_ENGINE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      EMAIL_BACKEND: ${EMAIL_BACKEND}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
