stages:
  - build
  - deploy
  - deploy-database
  - logs

build-jobs:
  stage: build
  script:
    - echo "Очистка старых Docker данных для освобождения места..."
    - docker system prune -af --volumes
    - echo "Сборка образов..."
    - docker-compose -f infrastructure/docker-compose.yaml build
    - echo "Запуск контейнеров для проверки..."
    - docker-compose -f infrastructure/docker-compose.yaml up -d
    - echo "Проверка состояния контейнеров после сборки..."
    - docker ps -a
    - echo "Docker система:"
    - docker info
  only:
    - develop

deploy-jobs:
  stage: deploy
  script:
    - echo "Деплой новых контейнеров..."
    - docker-compose -f infrastructure/docker-compose.yaml up -d
  needs:
    - build-jobs
  only:
    - develop

deploy-database:
  stage: deploy-database
  image: postgres:16-alpine
  variables:
    PGPASSWORD: $POSTGRES_PASSWORD  # Используем переменную для безопасности
  script:
    - echo "Загрузка дампа базы данных..."
    - psql -h $DB_HOST -U $POSTGRES_USER -d $POSTGRES_DB -f backup.sql
  dependencies:
    - build-jobs  # Убедимся, что build-jobs завершен успешно перед этим шагом
  only:
    - develop

logs-jobs:
  stage: logs
  script:
    - echo "Состояние контейнеров:"
    - docker ps -a
    - echo "Логи контейнера web:"
    - docker logs bearcoder-web
    - echo "Логи контейнера db:"
    - docker logs bearcoder-db
  only:
    - develop
