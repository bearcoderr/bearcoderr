stages:
  - build
  - deploy
  - test
  - logs

build-jobs:
  stage: build
  image: docker:latest  # Используем официальный образ Docker, который включает docker-compose
  services:
    - docker:dind  # Запуск Docker-in-Docker
  script:
    - echo "Очистка старых Docker данных для освобождения места..."
    - docker system prune -af --volumes
    - echo "Сборка образов..."
    - docker-compose -f infrastructure/docker-compose.yaml build
    - echo "Запуск контейнера для проверки его содержимого..."
    - docker-compose -f infrastructure/docker-compose.yaml up -d
    - echo "Просмотр структуры файлов в контейнере web..."
    - docker exec -i bearcoder-web-1 ls -R /
    - echo "Поиск всех файлов в контейнере web..."
    - docker exec -i bearcoder-web-1 find /
    - echo "Просмотр логов контейнера web..."
    - docker logs bearcoder-web-1 || echo "Логи не найдены"
    - echo "Информация о контейнере web..."
    - docker exec -i bearcoder-web-1 ps aux || echo "Команда ps не найдена"
    - echo "Проверка состояния контейнеров после сборки..."
    - docker ps -a
    - echo "Просмотр состояния Docker системы..."
    - docker info
  only:
    - develop



deploy-jobs:
  stage: deploy
  image: docker:latest  # Используем образ с Docker, но также можем добавить docker-compose
  services:
    - docker:dind  # Запуск Docker-in-Docker
  script:
    - echo "Установка docker-compose..."
    - apk add --no-cache docker-compose  # Установка docker-compose для Alpine образа (если используется)
    - echo "Деплой новых контейнеров..."
    - docker-compose -f infrastructure/docker-compose.yaml up -d
  only:
    - develop


logs-jobs:
  stage: logs
  image: docker:latest  # Используем образ с Docker, но также можем добавить docker-compose
  services:
    - docker:dind
  script:
    - echo "Состояние контейнеров:"
    - docker ps -a
    - echo "Логи контейнера web:"
    - docker logs bearcoder-web-1
    - echo "Логи контейнера db:"
    - docker logs bearcoder-db-1
  only:
    - develop
