stages:
  - build
  - deploy
  - migrate

# Stage сборки Docker образов
build-jobs:
  stage: build
  script:
    - echo "Очистка старых Docker данных для освобождения места..."
    - docker system prune -af --volumes
    - echo "Сборка образов..."
    - docker-compose -f infrastructure/docker-compose.yaml build
    - echo "Запуск контейнеров для проверки..."
    - docker-compose -f infrastructure/docker-compose.yaml up -d
    - echo "Проверка состояния контейнеров после сборки..."
    - docker ps -a
    - echo "Docker система:"
    - docker info
  only:
    - develop

# Stage деплоя контейнеров
deploy-jobs:
  stage: deploy
  script:
    - echo "Деплой новых изменений..."
    - docker-compose -f infrastructure/docker-compose.yaml up -d --no-build
    - echo "Обновлены контейнеры без пересоздания образов."
  needs:
    - build-jobs
  only:
    - develop

# Stage миграции базы данных
migrate-jobs:
  stage: migrate
  script:
    - echo "Применение миграций Django к базе данных..."
    - docker-compose -f infrastructure/docker-compose.yaml run --rm web poetry run python manage.py makemigrations --no-input
    - docker-compose -f infrastructure/docker-compose.yaml run --rm web poetry run python manage.py migrate --no-input --database=default
    - echo "Миграции завершены!"
  needs:
    - deploy-jobs
  only:
    - develop
